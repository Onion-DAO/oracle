name: Deploy functions on push/merge

on:
  # Trigger: on new tag push
  push:
    branches:
      - main
    paths:
      - '.firebaserc'
      - '.github/workflows/deploy-oracle.yml'
      - 'functions/**'

jobs:
  build:
    name: Publish changes

    runs-on: ubuntu-latest

    steps:
      # Get the repo files from current commit
      - name: Cloning repository
        uses: actions/checkout@v1
      - name: Checkout main
        run: git checkout main

      # Set up node and install frontend dependencies
      - name: Set up Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: "functions/.nvmrc"
          cache-dependency-path: "functions/package-lock.json"
          cache: "npm"
      - name: Install functions dependencies
        run: npm ci --loglevel verbose
        working-directory: functions

      - name: Create environment files
        run: |
          echo -e "${{ secrets.FUNCTIONS_DOTENV }}" > .env
        working-directory: functions

      - name: Set up firebase
        uses: w9jds/setup-firebase@main
        with:
          project_id: production
          gcp_sa_key: ${{ secrets.SERVICE_ACCOUNT_PRODUCTION }}
      - name: Deploy functions
        run: firebase deploy --only functions

      - name: Send push notification
        env:
          MSG_TITLE: "Success: OnionDAO Oracle"
          MSG_CONTENT: "functions CI success"
        run: curl -f -X POST -d "token=${{ secrets.PUSHOVER_TOKEN }}&user=${{ secrets.PUSHOVER_USER }}&title=$MSG_TITLE&message=$MSG_CONTENT&priority=1" https://api.pushover.net/1/messages.json
        
      - name: Send failure push notification
        if: ${{ failure() }}
        env:
          MSG_TITLE: "Failure: OnionDAO Oracle"
          MSG_CONTENT: "functions CI failed"
        run: curl -f -X POST -d "token=${{ secrets.PUSHOVER_TOKEN }}&user=${{ secrets.PUSHOVER_USER }}&title=$MSG_TITLE&message=$MSG_CONTENT&priority=1" https://api.pushover.net/1/messages.json